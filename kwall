#!/bin/bash

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
BACKEND_DIR="$SCRIPT_DIR/backend"
FRONTEND_DIR="$SCRIPT_DIR/frontend"

BACKEND_PID="$SCRIPT_DIR/proc/backend.pid"
FRONTEND_PID="$SCRIPT_DIR/proc/frontend.pid"

start() {
    echo "[*] Loading kernel module..."
    sudo modprobe kwall || { echo "[!] Failed to load kwall module."; exit 1; }
    sleep 1

    echo "[*] Starting backend..."
    cd "$BACKEND_DIR"
    nohup python3 main.py > "$SCRIPT_DIR/logs/backend.log" 2>&1 &
    echo $! > "$BACKEND_PID"
    sleep 1

    echo "[*] Starting frontend..."
    cd "$FRONTEND_DIR"
    nohup npm run dev > "$SCRIPT_DIR/logs/frontend.log" 2>&1 &
    echo $! > "$FRONTEND_PID"
    sleep 1

    echo "[+] Firewall started successfully."
}

stop() {
    echo "[*] Stopping backend..."
    if [ -f "$BACKEND_PID" ]; then
        pkill -TERM -P $(cat "$BACKEND_PID") 2>/dev/null
        kill $(cat "$BACKEND_PID") 2>/dev/null
        rm -f "$BACKEND_PID"
        echo "[+] Backend stopped."
    else
        echo "[!] Backend PID file not found."
    fi
    sleep 1

    echo "[*] Stopping frontend..."
    if [ -f "$FRONTEND_PID" ]; then
        FRONTEND_MAIN_PID=$(cat "$FRONTEND_PID")
        pkill -TERM -P $FRONTEND_MAIN_PID 2>/dev/null
        kill $FRONTEND_MAIN_PID 2>/dev/null
        rm -f "$FRONTEND_PID"
        echo "[+] Frontend stopped."
    else
        echo "[!] Frontend PID file not found."
    fi
    sleep 1

    pkill -u "$(whoami)" -x node 2>/dev/null
    sleep 1

    echo "[*] Unloading kernel module..."
    sudo rmmod kwall && echo "[+] kwall module unloaded." || echo "[!] Failed to unload kwall."
    sleep 1
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    *)
        echo "Usage: sudo $0 {start|stop}"
        exit 1
        ;;
esac
